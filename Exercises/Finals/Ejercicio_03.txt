Ejercicio 3:

(define (f n m b) 
    (cond [(= n (+ m 2)) (+ n m)]
          [(and (< n m) b) (+ n m 3)]
          [else (* 2 n)]))

1. f : Number Number Bool -> Number
2.
(f 4 2 #t)
==
(cond [(= 4 (+ 2 2)) (+ 4 2)]
      [(and (< 4 2) b) (+ 4 2 3)]
      [else (* 2 4)])
==
(cond [(= 4 4) (+ 4 2)]
      [(and (< 4 2) b) (+ 4 2 3)]
      [else (* 2 4)])
==
(cond [#true (+ 4 2)]
      [(and (< 4 2) b) (+ 4 2 3)]
      [else (* 2 4)])
==
(+ 4 2)
==
6

(f 5 6 #f)
==
(cond [(= 5 (+ 6 2)) (+ 5 6)]
      [(and (< 5 6) #f) (+ 5 6 3)]
      [else (* 2 5)])
==
(cond [(= 5 8) (+ 5 6)]
      [(and (< 5 6) #f) (+ 5 6 3)]
      [else (* 2 5)])
==
(cond [#false (+ 5 6)]
      [(and (< 5 6) #f) (+ 5 6 3)]
      [else (* 2 5)])
==
(cond [(and (< 5 6) #f) (+ 5 6 3)]
      [else (* 2 5)])
== 
(cond [(and #t #f) (+ 5 6 3)]
      [else (* 2 5)])
==
(cond [#false (+ 5 6 3)]
      [else (* 2 5)])
==
(cond [else (* 2 5)])
==
(* 2 5)
== 
10